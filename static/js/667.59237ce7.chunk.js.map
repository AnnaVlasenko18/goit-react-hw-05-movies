{"version":3,"file":"static/js/667.59237ce7.chunk.js","mappings":"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","sources":["pages/MoviesPage/MoviesPageStyled.js","pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FormMovies = styled('form')`\n  margin: ${p => p.theme.spacing(10)};\n  text-align: center;\n  position: relative;\n  margin-top: ${p => p.theme.spacing(30)};\n`;\n\nexport const InputMovies = styled('input')`\n  width: 300px;\n  font-size: ${p => p.theme.fontSize.fs14};\n  padding: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(3)};\n  line-height: ${p => p.theme.spacing(6)};\n  color: #24292e;\n  vertical-align: middle;\n  background-color: ${p => p.theme.colors.textLink};\n  background-repeat: no-repeat;\n  background-position: right 8px center;\n  border: 1px solid #a2a2a2;\n  border-radius: 6px;\n  outline: none;\n  box-shadow: rgba(225, 228, 232, 0.2) 0px 1px 0px 0px inset;\n\n  &:focus {\n    border-color: #0366d6;\n    outline: none;\n    box-shadow: rgba(3, 102, 214, 0.3) 0px 0px 0px 3px;\n  }\n`;\n\nexport const ContainerMovies = styled('div')`\n  max-width: 1440px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: ${p => p.theme.spacing(6)};\n  border-bottom: solid #a2a2a2 1px;\n`;\n\nexport const ListMovies = styled('ul')`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.spacing(5)};\n  list-style: none;\n`;\n\nexport const ItemMovies = styled('li')`\n  background: ${p => p.theme.colors.textLink};\n  font-weight: 500;\n  width: 200px;\n  overflow: hidden;\n  box-shadow: 0px 0.8px 2px rgba(0, 0, 0, 0.032),\n    0px 2.7px 6.7px rgba(0, 0, 0, 0.048), 0px 12px 30px rgba(0, 0, 0, 0.08);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const LinkMovies = styled(Link)`\n  text-decoration: none;\n  font-size: ${p => p.theme.fontSize.fs20};\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const InfoMovies = styled('div')`\n  padding: ${p => p.theme.spacing(2)};\n  color: ${p => p.theme.colors.textItem};\n  font-size: ${p => p.theme.fontSize.fs20};\n`;\n\nexport const TextSecondary = styled('p')`\n  margin: ${p => p.theme.spacing()};\n  text-align: center;\n  font-weight: 700;\n`;\n","import { searchMovies } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Blocks } from 'react-loader-spinner';\nimport { MdOutlineNoPhotography } from 'react-icons/md';\n\nimport {\n  ContainerMovies,\n  InfoMovies,\n  ItemMovies,\n  ListMovies,\n  TextSecondary,\n  LinkMovies,\n  FormMovies,\n  InputMovies,\n} from './MoviesPageStyled';\n\nexport default function Movies() {\n  const [isLoading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  const [params, setParams] = useSearchParams();\n  const searchedMovie = params.get('movie') ?? '';\n\n  useEffect(() => {\n    const feachMovie = async () => {\n      setLoading(true);\n      try {\n        if (!searchedMovie) {\n          return;\n        }\n        const { results } = await searchMovies(searchedMovie);\n        if (!results) {\n          return;\n        }\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    feachMovie();\n  }, [searchedMovie]);\n\n  const location = useLocation();\n\n  const onSearch = evt => {\n    evt.preventDefault();\n\n    const { value } = evt.target.elements.movie;\n    if (value) {\n      setParams({ movie: value });\n    }\n  };\n\n  return (\n    <>\n      <FormMovies onSubmit={onSearch}>\n        <InputMovies\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search movie\"\n          name=\"movie\"\n        ></InputMovies>\n      </FormMovies>\n\n      {error && <p>Oops, something went wrong, please try again later.</p>}\n      {isLoading && (\n        <Blocks\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n        />\n      )}\n\n      {movies.length > 0 && !isLoading && (\n        <ContainerMovies>\n          <ListMovies>\n            {movies.length > 0 &&\n              movies.map((movie, index) => {\n                const { id, original_title, poster_path } = movie;\n                const BASE_URL = 'https://image.tmdb.org/t/p/w200';\n                const photo = BASE_URL + poster_path;\n\n                return (\n                  <ItemMovies key={index}>\n                    <LinkMovies to={`${id}`} state={{ from: location }}>\n                      {poster_path ? (\n                        <img src={photo} alt={original_title} />\n                      ) : (\n                        <MdOutlineNoPhotography\n                          style={{\n                            width: '200px',\n                            height: '200px',\n                            color: '#8080803b',\n                          }}\n                        />\n                      )}\n                      <InfoMovies>{original_title}</InfoMovies>\n                    </LinkMovies>\n                  </ItemMovies>\n                );\n              })}\n          </ListMovies>\n        </ContainerMovies>\n      )}\n      {movies.length === 0 && !isLoading && searchedMovie && (\n        <TextSecondary>Movie \"{searchedMovie}\" not found.</TextSecondary>\n      )}\n    </>\n  );\n}\n"],"names":["FormMovies","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","InputMovies","_templateObject2","fontSize","fs14","colors","textLink","ContainerMovies","_templateObject3","ListMovies","_templateObject4","ItemMovies","_templateObject5","LinkMovies","Link","_templateObject6","fs20","InfoMovies","_templateObject7","textItem","TextSecondary","_templateObject8","Movies","_params$get","_useState","useState","_useState2","_slicedToArray","isLoading","setLoading","_useState3","_useState4","movies","setMovies","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","searchedMovie","get","useEffect","feachMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$searchMovies","results","_context","prev","next","abrupt","searchMovies","sent","t0","finish","stop","apply","arguments","location","useLocation","_jsxs","_Fragment","children","_jsx","onSubmit","evt","preventDefault","value","target","elements","movie","type","autoComplete","placeholder","name","Blocks","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","length","map","index","id","original_title","poster_path","photo","to","concat","state","from","src","alt","MdOutlineNoPhotography","style","color"],"sourceRoot":""}